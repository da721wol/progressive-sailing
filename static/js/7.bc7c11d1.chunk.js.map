{"version":3,"sources":["routes/settings/Settings.js"],"names":["Wrapper","styled","div","Form","form","props","rows","Label","label","Submit","input","active","Settings","state","temperature","distance","speed","angle","timeFormat","dateFormat","dirty","handleChange","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","setSettings","alert","style","textAlign","margin","className","onSubmit","onChange","onClick","disabled","type","React","Component","connect","settings","getSettings"],"mappings":"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","file":"static/js/7.bc7c11d1.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {getSettings} from \"../../redux/selectors\";\nimport {setSettings} from \"../../redux/actions\";\nimport styled from \"styled-components\";\n\nconst mapStateToProps = state => {\n  let settings = getSettings(state);\n  return {\n    temperature: settings.temperature,\n    distance: settings.distance,\n    speed: settings.speed,\n    angle: settings.angle,\n    timeFormat: settings.timeFormat,\n    dateFormat: settings.dateFormat\n  }\n};\n\nconst Wrapper = styled.div`\n  overflow: auto;\n  width: 100%;\n  max-width: 680px;\n  justify-self: center;\n  display: grid\n`;\n\nconst Form = styled.form`\n  max-width: 680px;\n  padding: 20px;\n  display: grid;\n  grid-template-rows: repeat(${props => props.rows}, 50px);\n  grid-gap: 20px;\n  margin: 0 20px;\n  align-items: center;\n  justify-items: start;\n  position: relative;\n  \n  select {\n    //display: none;\n    justify-self: end;\n  }\n`;\n\nconst Label = styled.label`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  width: 100%;\n  \n  select {\n    width: 150px;\n  }\n`;\n\nconst Submit = styled.input`\n  height: 60px;\n  margin: 20px;\n  justify-self: end;\n  cursor: ${props => props.active ? \"pointer\" : null};;\n  box-shadow: ${props => props.active ? \"0 4px 8px 0 rgba(0,0,0,0.2)\" : null};\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 20px;\n  border: none;\n  background: none;\n  \n`;\n\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: this.props.temperature,\n      distance: this.props.distance,\n      speed: this.props.speed,\n      angle: this.props.angle,\n      timeFormat: this.props.timeFormat,\n      dateFormat: this.props.dateFormat,\n      dirty: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({dirty: true});\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.setSettings(this.state);\n    this.setState({dirty: false});\n    alert(\"Settings have been changed\");\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <h2 style={{textAlign: \"start\", margin: \"20px\"}}>Unit Settings</h2>\n        <Form className={\"card\"} rows={\"4\"} onSubmit={this.handleSubmit}>\n          <Label>\n            Temperature Unit:\n            <select value={this.state.temperature} name={\"temperature\"} onChange={this.handleChange}>\n              <option value={\"C\"}>Celsius</option>\n              <option value={\"K\"}>Kelvin</option>\n              <option value={\"F\"}>Fahrenheit</option>\n            </select>\n          </Label>\n          <Label>\n            Distance Unit:\n            <select value={this.state.distance} name={\"distance\"} onChange={this.handleChange}>\n              <option value={\"m\"}>Metric</option>\n              <option value={\"i\"}>Imperial</option>\n            </select>\n          </Label>\n          <Label>\n            Speed Unit:\n            <select value={this.state.speed} name={\"speed\"} onChange={this.handleChange}>\n              <option value={\"m/s\"}>Meters per second</option>\n              <option value={\"km/h\"}>Kilometers per hour</option>\n              <option value={\"knot\"}>Knots</option>\n              <option value={\"m/h\"}>Miles per hour</option>\n            </select>\n          </Label>\n          <Label>\n            Angular Unit:\n            <select value={this.state.angle} name={\"angle\"} onChange={this.handleChange}>\n              <option value={\"deg\"}>Degree</option>\n              <option value={\"rad\"}>Radian</option>\n            </select>\n          </Label>\n        </Form>\n        <h2 style={{textAlign: \"start\", margin: \"20px\"}}>Date and Time Settings</h2>\n        <Form className={\"card\"} rows={\"1\"} onSubmit={this.handleSubmit}>\n          <Label>\n            Time Format:\n            <select value={this.state.timeFormat} name={\"timeFormat\"} onChange={this.handleChange}>\n              <option value={\"24-hour\"}>24 Hour</option>\n              <option value={\"am/pm\"}>AM/PM</option>\n            </select>\n          </Label>\n          <Label>\n            Date Format:\n            <select value={this.state.dateFormat} name={\"dateFormat\"} onChange={this.handleChange}>\n              <option value={\"dd/mm/yy\"}>DD/MM/YY</option>\n              <option value={\"mm/dd/yy\"}>MM/DD/YY</option>\n            </select>\n          </Label>\n        </Form>\n        <Submit onClick={this.handleSubmit} active={this.state.dirty} disabled={!this.state.dirty} type={\"submit\"} value={\"Save Settings\"}/>\n\n      </Wrapper>\n    )\n\n  }\n}\n\nexport default connect(mapStateToProps, { setSettings, getSettings })(Settings);\n"],"sourceRoot":""}