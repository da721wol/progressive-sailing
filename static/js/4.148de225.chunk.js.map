{"version":3,"sources":["components/UnitConverter.js","components/log-entry/LogEntry.js","routes/logs-overview/LogsOverview.js"],"names":["convertTime","time","setting","Date","toLocaleTimeString","convertDate","date","toLocaleDateString","convertDistance","val","convert","from","to","convertAngle","Math","PI","convertSpeed","convertTemperature","Container","styled","div","props","id","selected","LogEntry","logEntry","content","navigation","datetime","value","settings","timeFormat","onClick","customClickEvent","className","logType","getIcon","Position","longitude","position","latitude","width","height","CourseOverGround","courseOverGround","courseOverGroundTrue","angle","SpeedThroughWater","speedThroughWater","speed","Current","drift","environment","current","setTrue","LogDetails","lazy","LogsOverview","handleWindowSizeChange","setState","window","innerWidth","state","selectedLog","logs","selectLog","bind","selectPath","path","this","selectedPath","removeEventListener","addEventListener","log","MobileView","DesktopView","React","Component","connect","getLogs","getSelectedLog","getSettings","length","slice","reverse","map","index","key","pathname"],"mappings":"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","file":"static/js/4.148de225.chunk.js","sourcesContent":["import convert from \"convert-units\";\n\nexport const convertTime = (time, setting) => {\n  if (setting === \"24-hour\") {\n    return new Date(time)\n      .toLocaleTimeString('de-DE');\n  } else {\n    return new Date(time)\n      .toLocaleTimeString('en-US');\n  }\n};\n\nexport const convertDate = (date, setting) => {\n  if (setting === \"dd/mm/yy\") {\n    return new Date(date).toLocaleDateString('de-DE')\n  } else {\n    return new Date(date).toLocaleDateString('en-US')\n  }\n};\n\nexport const convertDistance = (val, setting) => {\n  if (setting !== 'm') {\n    return convert(val).from('m').to('ft-us')\n  } else {\n    return val\n  }\n};\n\nexport const convertAngle = (val, setting) => {\n  if (setting === 'deg') {\n    return val * (180/Math.PI)\n  } else {\n    return val\n  }\n};\n\nexport const convertSpeed = (val, setting) => {\n  if (setting !== 'm/s') {\n    return convert(val).from('m/s').to(setting)\n  } else {\n    return val\n  }\n};\n\nexport const convertTemperature = (val, setting) => {\n  if (setting !== 'K') {\n    return convert(val).from('K').to(setting)\n  } else {\n    return val\n  }\n};\n\n\n","import React from 'react';\nimport './LogEntry.css'\nimport Icons, {getIcon} from '../icons'\nimport styled from \"styled-components\";\nimport {convertAngle, convertSpeed, convertTime} from \"../UnitConverter\"\n\nconst Container = styled.div`\n  margin: 10px;\n  box-shadow: ${props => props.id === props.selected  ? \" inset 0 4px 8px 0 rgba(0,0,0,0.2)\" : \"0 4px 8px 0 rgba(0,0,0,0.2)\"};\n  transition: 0.3s;\n  border-radius: 10px;\n  display: grid;\n  grid-gap: 5px;\n  grid-template-areas:\n    \"time time title title title\"\n    \"type-icon d1 d2 d3 d4\";\n  grid-template-rows: 1fr 4fr;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  padding: 5px;\n`;\n\nexport function LogEntry(props) {\n  let time = convertTime(props.logEntry.content.navigation.datetime.value, props.settings.timeFormat);\n\n  return (\n    <div onClick={props.customClickEvent}>\n      <Container selected={props.selected} id={props.logEntry.id}>\n        <div className={\"time\"}>\n          {props.logEntry.content.navigation.datetime\n            ? time\n            : 'No time available'\n          }\n        </div>\n        <div className={\"title\"}>\n          {props.logEntry.content.logType}\n        </div>\n        <div className={\"type-icon\"}>\n          {getIcon(props.logEntry.content.logType, \"60px\", \"60px\")}\n        </div>\n        <div className={\"d1\"}>\n          <Icons.Position\n            longitude={props.logEntry.content.navigation.position.value.longitude}\n            latitude={props.logEntry.content.navigation.position.value.latitude}\n            width={\"60px\"}\n            height={\"60px\"}\n          />\n        </div>\n        <div className={\"d2\"}>\n          <Icons.CourseOverGround\n            width={\"60px\"}\n            height={\"60px\"}\n            courseOverGround={convertAngle(props.logEntry.content.navigation.courseOverGroundTrue.value, props.settings.angle)}\n          />\n        </div>\n        <div className={\"d3\"}>\n          <Icons.SpeedThroughWater\n            width={\"60px\"}\n            height={\"60px\"}\n            speedThroughWater={convertSpeed(props.logEntry.content.navigation.speedThroughWater.value, props.settings.speed)}\n          />\n        </div>\n        <div className={\"d4\"}>\n          <Icons.Current\n            width={\"60px\"}\n            height={\"60px\"}\n            drift={convertAngle(props.logEntry.content.environment.current.value.drift, props.settings.angle)}\n            setTrue={convertAngle(props.logEntry.content.environment.current.value.setTrue, props.settings.angle)}\n          />\n        </div>\n      </Container>\n    </div>\n  )\n}\n","import React, { lazy } from 'react';\nimport { Link } from 'react-router-dom';\nimport { LogEntry } from '../../components/log-entry/LogEntry';\nimport './LogsOverview.css'\nimport { connect } from 'react-redux';\nimport { getLogs, getSelectedLog, getSettings } from '../../redux/selectors';\nimport { selectLog, selectPath } from '../../redux/actions';\n\nconst LogDetails = lazy(() => import('../../routes/log-details/LogDetails'));\n\nconst mapStateToProps = state => {\n  return {\n    logs: getLogs(state),\n    selectedLog: getSelectedLog(state),\n    settings: getSettings(state)\n  }\n};\n\nclass LogsOverview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      selectedLog: null,\n      logs: null\n    };\n    this.selectLog = this.selectLog.bind(this);\n    this.selectPath = this.selectPath.bind(this);\n  }\n\n  selectPath(path) {\n    this.setState({selectedPath: path});\n    this.props.selectPath(path);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize',\n      this.handleWindowSizeChange);\n  }\n\n  handleWindowSizeChange = () => {\n    this.setState({\n      width: window.innerWidth,\n    });\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize',\n      this.handleWindowSizeChange);\n  }\n\n  selectLog(log) {\n\n    this.setState({selectedLog: log});\n    this.props.selectLog(log.id, log.content)\n  }\n\n  render() {\n    const {width} = this.state;\n    const isMobile = width <= 500;\n\n    if (isMobile) {\n      return <MobileView\n        settings={this.props.settings}\n        logs={this.props.logs}\n        selectLog={this.selectLog}\n        selectPath={this.selectPath}\n      />;\n    } else {\n      return <DesktopView\n        settings={this.props.settings}\n        logs={this.props.logs}\n        selectedLog={this.state.selectedLog}\n        selectLog={this.selectLog}\n      />\n\n    }\n  }\n}\n\nexport default connect(mapStateToProps, { selectLog, selectPath })(LogsOverview);\n\nfunction DesktopView(props) {\n  return (\n    <div className={\"logs-view\"}>\n      <div className={\"log-list\"}>\n        {props.logs && props.logs.length\n          ? props.logs.slice(0).reverse().map((log, index) => {\n            return (\n              <LogEntry\n                key={log.id}\n                logEntry={log}\n                customClickEvent={props.selectLog.bind(this, log)}\n                settings={props.settings}\n                selected={props.selectedLog ? props.selectedLog.id : null }\n              />\n            )\n          })\n          : 'No Logs yet!'}\n      </div>\n      {!props.selectedLog && <div>Select Log</div>}\n      {props.selectedLog && <LogDetails/>}\n    </div>\n  )\n}\n\nfunction MobileView(props) {\n  return (\n    <div className={\"log-list App-content\"}>\n      {props.logs && props.logs.length\n        ? props.logs.slice(0).reverse().map((log, index) => {\n          return <Link key={`log-${log.id}`}  to={{\n            pathname: \"/logs/details\",\n          }} onClick={() => {props.selectLog(log); props.selectPath(\"/logs/details\")}}>\n            <LogEntry\n              logEntry={log}\n              settings={props.settings}\n            />\n          </Link>\n        })\n        : 'No Logs yet!'}\n    </div>\n  )\n}\n"],"sourceRoot":""}