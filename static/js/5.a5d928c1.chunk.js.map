{"version":3,"sources":["components/UnitConverter.js","components/log-detail/LogDetail.js","routes/log-details/LogDetails.js"],"names":["convertTime","time","setting","Date","toLocaleTimeString","convertDate","date","toLocaleDateString","convertDistance","val","convert","from","to","convertAngle","Math","PI","convertSpeed","convertTemperature","Container","styled","div","TitleBar","props","weight","Category","ValueList","ValueListItem","LogDetail","word","toUpperCase","slice","replace","value","unit","undefined","this","settings","temperature","distance","speed","angle","dateFormat","timeFormat","key","meta","units","toFixed","detail","renderElement","getIcon","style","wordBreak","Object","keys","map","getUnit","capitalize","roundValue","getSettingsUnit","k","datetime","newVersion","message","battery","capacity","timeRemaining","voltage","current","className","name","MoreVert","height","width","valueRender","React","Component","DetailsList","DesktopColumns","LogDetails","state","selectedLog","columns","getNumberOfColumns","window","innerWidth","column","content","category","index","length","connect","getSelectedLog","getSettings"],"mappings":"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","file":"static/js/5.a5d928c1.chunk.js","sourcesContent":["import convert from \"convert-units\";\n\nexport const convertTime = (time, setting) => {\n  if (setting === \"24-hour\") {\n    return new Date(time)\n      .toLocaleTimeString('de-DE');\n  } else {\n    return new Date(time)\n      .toLocaleTimeString('en-US');\n  }\n};\n\nexport const convertDate = (date, setting) => {\n  if (setting === \"dd/mm/yy\") {\n    return new Date(date).toLocaleDateString('de-DE')\n  } else {\n    return new Date(date).toLocaleDateString('en-US')\n  }\n};\n\nexport const convertDistance = (val, setting) => {\n  if (setting !== 'm') {\n    return convert(val).from('m').to('ft-us')\n  } else {\n    return val\n  }\n};\n\nexport const convertAngle = (val, setting) => {\n  if (setting === 'deg') {\n    return val * (180/Math.PI)\n  } else {\n    return val\n  }\n};\n\nexport const convertSpeed = (val, setting) => {\n  if (setting !== 'm/s') {\n    return convert(val).from('m/s').to(setting)\n  } else {\n    return val\n  }\n};\n\nexport const convertTemperature = (val, setting) => {\n  if (setting !== 'K') {\n    return convert(val).from('K').to(setting)\n  } else {\n    return val\n  }\n};\n\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport Icons, {getIcon} from '../icons'\nimport {\n  convertAngle, convertDate, convertDistance,\n  convertSpeed,\n  convertTemperature,\n  convertTime\n} from \"../UnitConverter\"\n\nconst Container = styled.div`\n  padding: 15px;\n`;\n\nconst TitleBar = styled.div`\n  display: grid;\n  grid-template-columns: 50px 1fr 35px;\n  grid-gap: 10px;\n  font-weight: ${props => props.weight || 700};\n  font-size: 1.2em;\n  align-items: center;\n  margin: 0 0 20px;\n`;\n\nconst Category = styled.div`\n  border-radius: 10px;\n  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n  padding: 10px;\n\n`;\n\nconst ValueList = styled.div`\n  display: grid;\n`;\n\nconst ValueListItem = styled.div`\n  margin-bottom: 10px;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: 35px 1fr 1fr 35px;\n  align-items: center;\n  justify-items: start;\n`;\n\n\nexport class LogDetail extends React.Component {\n\n  capitalize(word) {\n    return word[0].toUpperCase() + word.slice(1).replace(/([a-z])([A-Z])/g, '$1 $2');\n  };\n\n  convert(value, unit=undefined) {\n    switch(unit) {\n      case \"C\": case \"F\": case \"K\":\n        return convertTemperature(value, this.props.settings.temperature);\n      case \"m\": case \"i\":\n        return convertDistance(value, this.props.settings.distance);\n      case \"m/s\": case \"km/h\": case \"knot\": case \"m/h\":\n        return convertSpeed(value, this.props.settings.speed);\n      case \"deg\": case \"rad\":\n        return convertAngle(value, this.props.settings.angle);\n      case \"mm/dd/yy\": case \"dd/mm/yy\":\n        return convertDate(value, this.props.settings.dateFormat);\n      case \"24-hour\": case \"am/pm\":\n        return convertTime(value, this.props.settings.timeFormat);\n      default:\n        return value\n    }\n  };\n\n  getSettingsUnit(unit) {\n    switch(unit) {\n      case \"C\": case \"F\": case \"K\":\n        return this.props.settings.temperature;\n      case \"m\": case \"i\":\n        return this.props.settings.distance;\n      case \"m/s\": case \"km/h\": case \"knot\": case \"m/h\":\n        return this.props.settings.speed;\n      case \"deg\": case \"rad\":\n        return this.props.settings.angle;\n      default:\n        return unit\n    }\n  }\n\n  getUnit(val, key) {\n    return val[key].meta ? val[key].meta.units ? val[key].meta.units : \"\" : \"\"\n  }\n\n  roundValue(val) {\n    return typeof val === 'number' ? val.toFixed(2) : val\n  }\n\n  valueRender(detail) {\n    let renderElement;\n    switch(typeof detail) {\n      case 'string':\n        renderElement = <ValueListItem key={detail}>\n          <div>{getIcon(detail, \"35px\", \"35px\")}</div>\n          <div style={{wordBreak: 'break-all'}}>{detail}</div>\n        </ValueListItem>;\n        break;\n      case 'object':\n        renderElement = Object.keys(detail).map(key => {\n          switch (key) {\n            case 'speedThroughWater': case 'speedThroughWaterReferenceType': case 'log': case 'speedOverGround':\n            case 'speedOverGroundTrue': case 'courseOverGroundTrue': case 'headingTrue': case 'magneticVariation':\n            case 'courseOverGroundMagnetic': case 'velocityMadeGood':\n              let unit = this.getUnit(detail, key);\n              return <ValueListItem key={key}>\n                <div>{getIcon(key, \"35px\", \"35px\")}</div>\n                <div>{this.capitalize(key)}</div>\n                <div>{this.roundValue(this.convert(detail[key].value, unit))}</div>\n                <div>{this.getSettingsUnit(unit)}</div>\n              </ValueListItem>;\n            case 'position': case 'current':\n              return (\n                <Category key={key}>\n                  <TitleBar weight={500}>\n                    {getIcon(key, \"35px\", \"35px\")}\n                    {this.capitalize(key)}\n                  </TitleBar>\n                  {Object.keys(detail[key].value).map(k => {\n                    let unit = this.getUnit(detail, key);\n                    return (\n                      <ValueListItem key={key + k}>\n                        <div>{getIcon(k, \"35px\", \"35px\")}</div>\n                        <div>{this.capitalize(k)}</div>\n                        <div>{this.roundValue(this.convert(detail[key].value[k], unit))}</div>\n                        <div>{this.getSettingsUnit(unit)}\n                        </div>\n                      </ValueListItem>\n                    )\n                  })}\n                </Category>);\n            case 'gnss': case 'trip': case 'water': case 'wind': case 'depth': case 'courseRhumbline':\n              return (\n                <Category key={key}>\n                  <TitleBar weight={500}>\n                    {getIcon(key, \"35px\", \"35px\")}\n                    {this.capitalize(key)}\n                  </TitleBar>\n                  {Object.keys(detail[key]).map(k => {\n                    let unit = this.getUnit(detail[key], k);\n                    return <ValueListItem key={key + k}>\n                      <div>{getIcon(k)}</div>\n                      <div>{this.capitalize(k)}</div>\n                      <div>{this.roundValue(this.convert(detail[key][k].value, unit))}</div>\n                      <div>{this.getSettingsUnit(unit)}</div>\n                    </ValueListItem>\n                  })}\n                </Category>);\n            case 'datetime':\n              return (\n                <Category key={key}>\n                  <TitleBar weight={500}>\n                    {getIcon(key, \"35px\", \"35px\")}\n                    {this.capitalize(key)}\n                  </TitleBar>\n                  <ValueListItem key={key + 'date'}>\n                    <div>{getIcon('date', \"35px\", \"35px\")}</div>\n                    <div>{this.capitalize('date')}</div>\n                    <div>{this.convert(detail.datetime.value, \"dd/mm/yy\")}</div>\n                  </ValueListItem>\n                  <ValueListItem key={key + 'time'}>\n                    <div>{getIcon('time', \"35px\", \"35px\")}</div>\n                    <div>{this.capitalize('time')}</div>\n                    <div>{this.convert(detail.datetime.value, \"24-hour\")}</div>\n                  </ValueListItem>\n                </Category>\n              );\n            case 'server':\n              return (\n                <Category key={key}>\n                  <TitleBar weight={500}>\n                    {getIcon(key, \"35px\", \"35px\")}\n                    {this.capitalize(key)}\n                  </TitleBar>\n                    <div>{detail[key].newVersion ? detail[key].newVersion.value.message : 'value not found'}</div>\n                </Category>\n              );\n            case 'batteries':\n              return (\n                <Category key={key}>\n                  <TitleBar weight={500}>\n                    {getIcon(key, \"35px\", \"35px\")}\n                    {this.capitalize(key)}\n                  </TitleBar>\n                  {Object.keys(detail[key]).map(battery => {\n                    return <Category key={battery}>\n                      <TitleBar weight={400}>{battery}</TitleBar>\n                      <ValueListItem>\n                        <div>{getIcon('capacity')}</div>\n                        <div>Capacity(Time Remaining)</div>\n                        <div>{detail[key][battery].capacity.timeRemaining.value}</div>\n                        <div>{detail[key][battery].capacity.timeRemaining.meta.units}</div>\n                      </ValueListItem>\n                      <ValueListItem>\n                        <div>{getIcon('voltage')}</div>\n                        <div>Voltage</div>\n                        <div>{detail[key][battery].voltage.value}</div>\n                        <div>{detail[key][battery].voltage.meta.units}</div>\n                      </ValueListItem>\n                      <ValueListItem>\n                        <div>{getIcon('')}</div>\n                        <div>Current</div>\n                        <div>{detail[key][battery].current.value}</div>\n                        <div>{detail[key][battery].current.meta.units}</div>\n                      </ValueListItem>\n                      <ValueListItem>\n                        <div>{getIcon('temperature')}</div>\n                        <div>Temperature</div>\n                        <div>{detail[key][battery].temperature.value}</div>\n                        <div>{detail[key][battery].temperature.meta.units}</div>\n                      </ValueListItem>\n                    </Category>\n                  })}\n                </Category>\n              );\n            default:\n              return <TitleBar weight={400}>{key}</TitleBar>\n          }\n        });\n        break;\n      default:\n        break;\n    }\n    return renderElement\n  };\n\n  render() {\n    return (\n      <div className={\"card\"}>\n        <Container>\n          <TitleBar>\n            {getIcon(this.props.name, \"50px\", \"50px\")}\n            {this.capitalize(this.props.name)}\n            <Icons.MoreVert height={\"20px\"} width={\"20px\"}/>\n          </TitleBar>\n          <ValueList>\n            {this.valueRender(this.props.detail)}\n          </ValueList>\n        </Container>\n      </div>\n    )\n  }\n\n}\n","import React from 'react';\nimport './LogDetails.css';\nimport {connect} from 'react-redux';\nimport styled from 'styled-components'\nimport {getSelectedLog, getSettings} from '../../redux/selectors';\nimport {LogDetail} from '../../components/log-detail/LogDetail';\n\nconst mapStateToProps = state => {\n  return {\n    selectedLog: getSelectedLog(state),\n    settings: getSettings(state)\n  }\n};\n\nconst DetailsList = styled.div`\n  //display: grid;\n`;\n\nconst DesktopColumns = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  overflow-y: scroll;\n  max-width: 100%;\n  \n  @media (min-width: 1020px) {\n    grid-template-columns: 1fr 1fr;\n  }\n  \n  @media (min-width: 1400px) {\n    grid-template-columns: 1fr 1fr 1fr ;\n  }\n  \n  @media (min-width: 2500px) {\n    grid-template-columns: repeat(6, 1fr);\n  }\n`;\n\nclass LogDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedLog: null\n    }\n  }\n\n  getNumberOfColumns(width) {\n    if (width < 1020) {\n      return [0]\n    } else if (width < 1400) {\n      return [0,1]\n    } else if (width < 2500) {\n      return [0,1,2]\n    } else {\n      return [0,1,2,3,4,5]\n    }\n  }\n\n  render() {\n    let columns = this.getNumberOfColumns(window.innerWidth);\n    return (\n      <DesktopColumns>\n        {columns.map(column => {\n          return (\n            <DetailsList key={column}>\n              {Object.keys(this.props.selectedLog.content).map((category, index) => {\n                if (index % columns.length === column) {\n                  return (\n                    <LogDetail settings={this.props.settings} key={category} name={category} detail={this.props.selectedLog.content[category]}/>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </DetailsList>\n          )\n        })}\n      </DesktopColumns>\n    )\n\n  }\n}\n\nexport default connect(mapStateToProps)(LogDetails);\n"],"sourceRoot":""}